/**
 * Cordova files integration into AngularJS
 * @version v1.0.1
 * @link http://github.com/sroze/angular-cordova-file
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="angular-cordova-file"),function(a,b,c){b.module("angular-cordova-file",["angular-simple-model","ui.bootstrap.modal","angularFileUpload"]),b.module("angular-cordova-file").factory("CordovaFile",function(b,d,e){var f=e.extend({getPreviewUrl:function(){var d=b.defer();if(this.has("dataUrl"))d.resolve(this.get("dataUrl"));else if(this.has("uri"))a.resolveLocalFileSystemURL!==c?a.resolveLocalFileSystemURL(this.get("uri"),function(a){d.resolve(a.toURL())}):d.resolve(this.get("uri"));else if(this.has("file")){var e=new FileReader;e.onloadend=function(a){d.resolve(a.target.result)},e.onerror=function(a){d.reject(a)},e.readAsDataURL(this.get("file"))}else d.reject("Unable to get preview URL");return d.promise},upload:function(a){var c=b.defer();if(a=a||{},"undefined"==typeof FileTransfer)d.upload({url:a.url,headers:a.headers,data:a.data,file:this.get("file"),fileFormDataName:a.fileKey}).progress(function(a){var b=parseInt(100*a.loaded/a.total);c.notify(b)}).success(function(a){c.resolve(a)}).error(function(a){c.reject(a)});else if(this.has("uri")){var e=this.get("uri"),f=new FileUploadOptions;f.fileKey=a.fileKey,f.fileName=e.substr(e.lastIndexOf("/")+1),f.mimeType=this.get("contentType"),f.headers=a.headers,f.params=a.data;var g=new FileTransfer;g.onprogress=function(a){var b=parseInt(100*a.loaded/a.total);c.notify(b)},g.upload(e,encodeURI(a.url),function(a){c.resolve(a)},function(a){c.reject(a)},f)}else c.reject("There's not URI");return c.promise}},{fromFile:function(a){return new f({file:a,contentType:a.type})},fromUri:function(a){return new f({uri:a})}});return f}),b.module("angular-cordova-file").directive("cordovaFile",function(a,b,c,d){function e(a,b){function c(a){navigator.camera.getPicture(function(a){if(-1==a.indexOf("://"))a="file://"+a;else if("content://"==a.substr(0,10))return b.dismiss("Image provider not supported");var c=d.fromUri(a);c.set("contentType","image/png"),b.close([c])},function(a){b.dismiss(a)},{quality:100,sourceType:a,destinationType:Camera.DestinationType.FILE_URI,encodingType:Camera.EncodingType.PNG,correctOrientation:!0})}a.close=function(){b.dismiss("canceled")},a.takePicture=function(){c(Camera.PictureSourceType.CAMERA)},a.fromLibrary=function(){c(Camera.PictureSourceType.PHOTOLIBRARY)}}return{link:function(f,g,h){var i=c(h.cordovaFile);g.on("change",function(a){if("undefined"==typeof Camera){var c,e,g=[];if(c=a.target.files,null!=c)for(e=0;e<c.length;e++)g.push(d.fromFile(c.item(e)));b(function(){i(f,{$files:g,$event:a})})}}),g.on("click",function(c){if("undefined"!=typeof Camera){c.preventDefault();var d=a.open({templateUrl:"template/cordova-file/choice.html",controller:e});d.result.then(function(a){b(function(){i(f,{$files:a,$event:{}})})},function(a){alert(a)}),f.$on("$destroy",function(){d.dismiss("Scope destroyed")})}})}}})}(window,window.angular);